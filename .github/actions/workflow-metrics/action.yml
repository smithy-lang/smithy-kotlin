name: Workflow Metrics
description: >
  Track and upload workflow metrics to CloudWatch

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        # will change this to AWS CI role before merging
        role-to-assume: arn:aws:iam::886436966712:role/Admin
        aws-region: us-west-2
    - name: Upload workflow metrics
      shell: bash
      run: |
        # Determine build job name with matrix values
        job_name="${{ github.job }}"
        if [ ! -z "${{ matrix.java-version || '' }}" ]; then
          job_name="${job_name}(${{ matrix.java-version }})"
        fi
        if [ ! -z "${{ matrix.os || '' }}" ]; then
          job_name="${job_name}(${{ matrix.os }})"
        fi
        
        # Determine success/failure (1 for success, 0 for failure)
        if [ "${{ job.status }}" == "success" ]; then
          success_value=1
        else
          success_value=0
        fi
        
        # Determine branch (PR target branch or current branch)
        if [ ! -z "${{ github.base_ref }}" ]; then
          branch_name="${{ github.base_ref }}"
        else
          branch_name="${{ github.ref_name }}"
        fi
        
        aws cloudwatch put-metric-data \
          --namespace "GitHub/Workflows" \
          --metric-data '[{
            "MetricName": "Success",
            "Value": '$success_value',
            "Unit": "Count",
            "Dimensions": [
              {
                "Name": "WorkflowName",
                "Value": "${{ github.workflow }}"
              },
              {
                "Name": "JobName",
                "Value": "'$job_name'"
              },
              {
                "Name": "Repository",
                "Value": "${{ github.repository }}"
              },
              {
                "Name": "Branch",
                "Value": "'$branch_name'"
              }
            ]
          }]'
        
        if [ -z "$WORKFLOW_START_TIME" ]; then
          echo "Warning: WORKFLOW_START_TIME not set, skipping metrics upload"
          exit 0
        fi
        
        duration=$(($(date +%s) - $WORKFLOW_START_TIME))
        
        # Only track duration for successful workflows
        if [ "$success_value" -eq 1 ]; then
          aws cloudwatch put-metric-data \
            --namespace "GitHub/Workflows" \
            --metric-data '[{
              "MetricName": "Duration",
              "Value": '$duration',
              "Unit": "Seconds",
              "Dimensions": [
                {
                  "Name": "WorkflowName",
                  "Value": "${{ github.workflow }}"
                },
                {
                  "Name": "JobName",
                  "Value": "'$job_name'"
                },
                {
                  "Name": "Repository",
                  "Value": "${{ github.repository }}"
                },
                {
                  "Name": "Branch",
                  "Value": "'$branch_name'"
                }
              ]
          }]'
        fi